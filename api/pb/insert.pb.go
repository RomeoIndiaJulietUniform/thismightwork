// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: insert.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Values        []float32              `protobuf:"fixed32,2,rep,packed,name=values,proto3" json:"values,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector) Reset() {
	*x = Vector{}
	mi := &file_insert_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_insert_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_insert_proto_rawDescGZIP(), []int{0}
}

func (x *Vector) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vector) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Vector) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type InsertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Vector        *Vector                `protobuf:"bytes,2,opt,name=vector,proto3" json:"vector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertRequest) Reset() {
	*x = InsertRequest{}
	mi := &file_insert_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRequest) ProtoMessage() {}

func (x *InsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_insert_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRequest.ProtoReflect.Descriptor instead.
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return file_insert_proto_rawDescGZIP(), []int{1}
}

func (x *InsertRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertRequest) GetVector() *Vector {
	if x != nil {
		return x.Vector
	}
	return nil
}

type InsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertResponse) Reset() {
	*x = InsertResponse{}
	mi := &file_insert_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertResponse) ProtoMessage() {}

func (x *InsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_insert_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertResponse.ProtoReflect.Descriptor instead.
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return file_insert_proto_rawDescGZIP(), []int{2}
}

func (x *InsertResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InsertResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_insert_proto protoreflect.FileDescriptor

const file_insert_proto_rawDesc = "" +
	"\n" +
	"\finsert.proto\x12\x0eseirraromeo.v1\"\xaf\x01\n" +
	"\x06Vector\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06values\x18\x02 \x03(\x02R\x06values\x12@\n" +
	"\bmetadata\x18\x03 \x03(\v2$.seirraromeo.v1.Vector.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"_\n" +
	"\rInsertRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12.\n" +
	"\x06vector\x18\x02 \x01(\v2\x16.seirraromeo.v1.VectorR\x06vector\"D\n" +
	"\x0eInsertResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB<Z:github.com/RomeoIndiaJulietUniform/thismightwork/api/pb;pbb\x06proto3"

var (
	file_insert_proto_rawDescOnce sync.Once
	file_insert_proto_rawDescData []byte
)

func file_insert_proto_rawDescGZIP() []byte {
	file_insert_proto_rawDescOnce.Do(func() {
		file_insert_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_insert_proto_rawDesc), len(file_insert_proto_rawDesc)))
	})
	return file_insert_proto_rawDescData
}

var file_insert_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_insert_proto_goTypes = []any{
	(*Vector)(nil),         // 0: seirraromeo.v1.Vector
	(*InsertRequest)(nil),  // 1: seirraromeo.v1.InsertRequest
	(*InsertResponse)(nil), // 2: seirraromeo.v1.InsertResponse
	nil,                    // 3: seirraromeo.v1.Vector.MetadataEntry
}
var file_insert_proto_depIdxs = []int32{
	3, // 0: seirraromeo.v1.Vector.metadata:type_name -> seirraromeo.v1.Vector.MetadataEntry
	0, // 1: seirraromeo.v1.InsertRequest.vector:type_name -> seirraromeo.v1.Vector
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_insert_proto_init() }
func file_insert_proto_init() {
	if File_insert_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_insert_proto_rawDesc), len(file_insert_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_insert_proto_goTypes,
		DependencyIndexes: file_insert_proto_depIdxs,
		MessageInfos:      file_insert_proto_msgTypes,
	}.Build()
	File_insert_proto = out.File
	file_insert_proto_goTypes = nil
	file_insert_proto_depIdxs = nil
}
